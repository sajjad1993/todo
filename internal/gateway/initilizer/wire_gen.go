// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package initilizer

import (
	"context"
	"github.com/sajjad1993/todo/internal/gateway/adapter/auth_client"
	"github.com/sajjad1993/todo/internal/gateway/adapter/broker"
	"github.com/sajjad1993/todo/internal/gateway/adapter/restapi/handlers"
	"github.com/sajjad1993/todo/internal/gateway/adapter/todo_list_client"
	"github.com/sajjad1993/todo/internal/gateway/app"
	"github.com/sajjad1993/todo/internal/gateway/app/command"
	"github.com/sajjad1993/todo/internal/gateway/app/query"
	"github.com/sajjad1993/todo/internal/gateway/config"
	"github.com/sajjad1993/todo/internal/gateway/container"
	"github.com/sajjad1993/todo/pkg/log"
	"github.com/sajjad1993/todo/pkg/meesage_broker"
)

// Injectors from wire.go:

// InitializeContainer  is dependency injected form of having *service.Container
func InitializeContainer(ctx context.Context) (*container.Container, error) {
	logger := log.NewLogger()
	configConfig, err := config.New()
	if err != nil {
		return nil, err
	}
	meesage_brokerConfig := config.NewMessageBrokerConfig(configConfig)
	producer, err := meesage_broker.NewProducer(meesage_brokerConfig)
	if err != nil {
		return nil, err
	}
	commandHandler := broker.New(producer)
	signUp := command.NewSignUpCommand(commandHandler)
	createTodo := command.NewCreateTodoCommand(commandHandler)
	createTodoList := command.NewCreateTodoListCommand(commandHandler)
	updateTodoList := command.NewUpdateTodoListCommand(commandHandler)
	deleteTodoList := command.NewDeleteTodoListCommand(commandHandler)
	updateTodo := command.NewUpdateTodoCommand(commandHandler)
	deleteTodo := command.NewDeleteTodoCommand(commandHandler)
	commands := app.NewCommands(signUp, createTodo, createTodoList, updateTodoList, deleteTodoList, updateTodo, deleteTodo)
	repository, err := auth_client.New(logger, configConfig)
	if err != nil {
		return nil, err
	}
	signIn := query.NewSignInQuery(repository)
	checkToken := query.NewCheckTokenQuery(repository)
	todoRepository, err := todo_list_client.New(logger, configConfig)
	if err != nil {
		return nil, err
	}
	listToDoList := query.NewListToDoList(todoRepository)
	queries := app.NewQueries(signIn, checkToken, listToDoList)
	application := app.New(commands, queries)
	handler := handlers.NewHandler(application)
	containerContainer, err := container.NewContainer(logger, configConfig, application, commandHandler, producer, handler)
	if err != nil {
		return nil, err
	}
	return containerContainer, nil
}
